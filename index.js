(()=>{var e={792:(e,t,s)=>{const{Router:o}=s(127),{addOperationRoutes:a}=s(824),r=[s(890),s(745)],n=[s(992),s(82)],l=o();n.forEach(((e,t)=>{a(l,r[t],e)})),e.exports=l},672:(e,t,s)=>{const o=s(479),a=s(127),r=s(792),n=s(577),l=a();n.authenticate().then((async()=>{await n.sync({force:!0}),console.log("[32mDB Connected Sucessfully![0m")})).catch((e=>console.error(e))),l.use(o()).use(a.urlencoded({extended:!0})).use(a.json({limit:process.env.BODY_SIZE})).use("/api",r).get("/",((e,t)=>t.send("<h1>Welcome to Generated API 👋 </h1>"))),e.exports=l},745:(e,t,s)=>{const{Controller:o}=s(295),a=s(903);e.exports=new class extends o{constructor(){super(a)}}},890:(e,t,s)=>{const{Controller:o}=s(295),a=s(976);e.exports=new class extends o{constructor(){super(a)}}},903:(e,t,s)=>{const{Model:o,DataTypes:a}=s(121),r=s(577);class n extends o{}n.init({id:{key:"id",type:a.INTEGER(10),allowNull:!1,primaryKey:!0},monto:{key:"monto",type:a.FLOAT(10),allowNull:!1},pagado:{key:"pagado",type:a.BOOLEAN,allowNull:!1,defaultValue:!1},descripcion:{key:"descripcion",type:a.STRING(255),allowNull:!1},Personaid:{key:"Personaid",type:a.INTEGER(10),allowNull:!1,references:{key:"id",model:"Persona"}}},{sequelize:r,tableName:"Deuda"}),e.exports=n},976:(e,t,s)=>{const{Model:o,DataTypes:a}=s(121),r=s(577);class n extends o{}n.init({id:{key:"id",type:a.INTEGER(10),allowNull:!1,primaryKey:!0},nombre:{key:"nombre",type:a.STRING(255),allowNull:!1},cedula:{key:"cedula",type:a.INTEGER(10),unique:!0,allowNull:!1},telefono:{key:"telefono",type:a.INTEGER(10),allowNull:!1},fechaNac:{key:"fechaNac",type:a.DATE,allowNull:!1}},{sequelize:r,tableName:"Persona"}),e.exports=n},295:(e,t,s)=>{const{Model:o}=s(121),{Request:a,Response:r}=s(127),n=s(577),l={status:500,message:"⚠️ Ups!, Something goes Wrong !!⚠️"};e.exports={Controller:class{constructor(e){this.model=e}all=async(e,t)=>{let s=await n.transaction({autocommit:!0});return this.model.findAll().then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await s.rollback(),t.status(500).json(l))))};find=async(e,t)=>{let s=await n.transaction({autocommit:!0});return this.model.findOne({where:{id:e.params.id},transaction:s}).then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await s.rollback(),t.status(500).json(l))))};save=async(e,t)=>{let s=await n.transaction({autocommit:!0});return this.model.upsert(e.body,{transaction:s}).then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await s.rollback(),t.status(500).json(l))))};destroy=async(e,t)=>{let s=await n.transaction({autocommit:!0});return this.model.destroy({transaction:s,where:{id:e.params.id}}).then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await s.rollback(),t.status(500).json(l))))}},defaultErrorMessage:l}},824:e=>{const t={read:(e,t,s)=>e.get(`/${t}`,s.all),show:(e,t,s)=>e.get(`/${t}/:id`,s.find),create:(e,t,s)=>e.post(`/${t}`,s.save),update:(e,t,s)=>e.post(`/${t}/:id`,s.save),delete:(e,t,s)=>e.delete(`/${t}/:id`,s.destroy)};e.exports={addOperationRoutes:(e,s,{route:o,operations:a})=>{a.forEach((a=>{t[a](e,o,s)}))}}},577:(e,t,s)=>{const{Sequelize:o}=s(121);s(334).config(),e.exports=new o({logging:!0,host:process.env.DB_HOST,port:process.env.DB_PORT,dialect:process.env.DB_DIAL,database:process.env.DB_NAME,username:process.env.DB_USER,password:process.env.DB_PASS,define:{paranoid:!0,defaultScope:{attributes:{exclude:["createdAt","updatedAt","deletedAt"]}}}})},479:e=>{"use strict";e.exports=require("cors")},334:e=>{"use strict";e.exports=require("dotenv")},127:e=>{"use strict";e.exports=require("express")},121:e=>{"use strict";e.exports=require("sequelize")},82:e=>{"use strict";e.exports=JSON.parse('{"route":"deudas","operations":["read","show","create","update","delete"]}')},992:e=>{"use strict";e.exports=JSON.parse('{"route":"personas","operations":["read","show","create","update","delete"]}')}},t={};function s(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,s),r.exports}(()=>{const e=s(672);s(334).config(),e.listen(process.env.PORT||8e3,(()=>{console.table([{ServerOn:`http://${process.env.HOST}:${process.env.PORT}`,Date:new Date}])}))})()})();