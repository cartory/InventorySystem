(()=>{var e={792:(e,t,s)=>{const{Router:o}=s(127),{addOperationRoutes:r}=s(824),a=[s(731),s(773),s(909),s(505)],l=[s(513),s(622),s(199),s(594)],n=o();l.forEach(((e,t)=>{r(n,a[t],e)})),e.exports=n},672:(e,t,s)=>{const o=s(479),r=s(127),a=s(792),l=s(577),n=r();l.authenticate().then((async()=>{console.log("[32mDB Connected Sucessfully![0m")})).catch((e=>console.error(e))),n.use(o()).use(r.urlencoded({extended:!0})).use(r.json({limit:process.env.BODY_SIZE})).use("/api",a).get("/",((e,t)=>t.send("<h1>Welcome to Generated API 👋 </h1>"))),e.exports=n},773:(e,t,s)=>{const{Controller:o}=s(295),r=s(663);e.exports=new class extends o{constructor(){super(r)}}},909:(e,t,s)=>{const{Controller:o}=s(295),r=s(833);e.exports=new class extends o{constructor(){super(r)}}},731:(e,t,s)=>{const{Controller:o}=s(295),r=s(178);e.exports=new class extends o{constructor(){super(r)}}},505:(e,t,s)=>{const{Controller:o}=s(295),r=s(124);e.exports=new class extends o{constructor(){super(r)}}},663:(e,t,s)=>{const{Model:o,DataTypes:r}=s(121),a=s(577);class l extends o{}l.init({ID:{key:"ID",type:r.INTEGER(10),allowNull:!1,primaryKey:!0},FirstName:{key:"FirstName",type:r.STRING(255),allowNull:!0},LastName:{key:"LastName",type:r.STRING(255),allowNull:!0},Address:{key:"Address",type:r.STRING(255),allowNull:!0},BirthDate:{key:"BirthDate",type:r.DATE,allowNull:!0},PhoneNumber:{key:"PhoneNumber",type:r.INTEGER(10),allowNull:!0}},{sequelize:a,tableName:"Customer"}),e.exports=l},833:(e,t,s)=>{const{Model:o,DataTypes:r}=s(121),a=s(577);class l extends o{}l.init({MovieID:{key:"MovieID",type:r.INTEGER(10),allowNull:!1,primaryKey:!0,references:{key:"ID",model:"Movie"}},CustomerID:{key:"CustomerID",type:r.INTEGER(10),allowNull:!1,primaryKey:!0,references:{key:"ID",model:"Customer"}},Date_Rented:{key:"Date_Rented",type:r.TIME,allowNull:!0},Due_Date:{key:"Due_Date",type:r.TIME,allowNull:!0}},{sequelize:a,tableName:"Customer_Movie"}),e.exports=l},178:(e,t,s)=>{const{Model:o,DataTypes:r}=s(121),a=s(577);class l extends o{}l.init({ID:{key:"ID",type:r.INTEGER(10),allowNull:!1,primaryKey:!0},ProducerID:{key:"ProducerID",type:r.INTEGER(10),allowNull:!1,references:{key:"ID",model:"Producer"}},Title:{key:"Title",type:r.STRING(255),allowNull:!0},Duration:{key:"Duration",type:r.INTEGER(10),allowNull:!0},Rating:{key:"Rating",type:r.CHAR(1),allowNull:!0}},{sequelize:a,tableName:"Movie"}),e.exports=l},124:(e,t,s)=>{const{Model:o,DataTypes:r}=s(121),a=s(577);class l extends o{}l.init({ID:{key:"ID",type:r.INTEGER(10),allowNull:!1,primaryKey:!0},CompanyName:{key:"CompanyName",type:r.STRING(200),allowNull:!0},Country:{key:"Country",type:r.STRING(255),allowNull:!0,defaultValue:"Bolivia"}},{sequelize:a,tableName:"Producer"}),e.exports=l},295:(e,t,s)=>{const{Model:o}=s(121),{Request:r,Response:a}=s(127),l=s(577),n={status:500,message:"⚠️ Ups!, Something goes Wrong !!⚠️"};e.exports={Controller:class{constructor(e){this.model=e}all=async(e,t)=>{let s=await l.transaction({autocommit:!0});return this.model.findAll().then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await s.rollback(),t.status(500).json(n))))};find=async(e,t)=>{let s=await l.transaction({autocommit:!0});return this.model.findOne({where:{id:e.params.id},transaction:s}).then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await s.rollback(),t.status(500).json(n))))};save=async(e,t)=>{let s=await l.transaction({autocommit:!0});return this.model.upsert(e.body,{transaction:s}).then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await s.rollback(),t.status(500).json(n))))};destroy=async(e,t)=>{let s=await l.transaction({autocommit:!0});return this.model.destroy({transaction:s,where:{id:e.params.id}}).then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await s.rollback(),t.status(500).json(n))))}},defaultErrorMessage:n}},824:e=>{const t={read:(e,t,s)=>e.get(`/${t}`,s.all),show:(e,t,s)=>e.get(`/${t}/:id`,s.find),create:(e,t,s)=>e.post(`/${t}`,s.save),update:(e,t,s)=>e.post(`/${t}/:id`,s.save),delete:(e,t,s)=>e.delete(`/${t}/:id`,s.destroy)};e.exports={addOperationRoutes:(e,s,{route:o,operations:r})=>{r.forEach((r=>{t[r](e,o,s)}))}}},577:(e,t,s)=>{const{Sequelize:o}=s(121);s(334).config(),e.exports=new o({logging:!1,host:process.env.DB_HOST,port:process.env.DB_PORT,dialect:process.env.DB_DIAL,database:process.env.DB_NAME,username:process.env.DB_USER,password:process.env.DB_PASS,define:{paranoid:!0,defaultScope:{attributes:{exclude:["createdAt","updatedAt","deletedAt"]}}}})},479:e=>{"use strict";e.exports=require("cors")},334:e=>{"use strict";e.exports=require("dotenv")},127:e=>{"use strict";e.exports=require("express")},121:e=>{"use strict";e.exports=require("sequelize")},622:e=>{"use strict";e.exports=JSON.parse('{"route":"customers","operations":["read","show","create","update","delete"]}')},199:e=>{"use strict";e.exports=JSON.parse('{"route":"customer_movies","operations":["read","show","create","update","delete"]}')},513:e=>{"use strict";e.exports=JSON.parse('{"route":"movies","operations":["read","show","create","update","delete"]}')},594:e=>{"use strict";e.exports=JSON.parse('{"route":"producers","operations":["read","show","create","update","delete"]}')}},t={};function s(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,s),a.exports}(()=>{const e=s(672);s(334).config(),e.listen(process.env.PORT||8e3,(()=>{console.log(`Server running on [33mhttp://${process.env.HOST}:${process.env.PORT}[0m`),console.log(new Date)}))})()})();