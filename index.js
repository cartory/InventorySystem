(()=>{var e={792:(e,t,r)=>{const{Router:o}=r(127),{addOperationRoutes:n}=r(824),s=[r(731),r(773),r(909),r(505)],a=[r(513),r(622),r(199),r(594)],u=o();a.forEach(((e,t)=>{n(u,s[t],e)})),e.exports=u},672:(e,t,r)=>{const o=r(479),n=r(127),s=r(792),a=r(577),u=n();a.authenticate().then((async()=>{await a.sync({force:!0}),console.log("[32mDB Connected Sucessfully![0m")})).catch((e=>console.error(e))),u.use(o()).use(n.urlencoded({extended:!0})).use(n.json({limit:process.env.BODY_SIZE})).use("/api",s).get("/",((e,t)=>t.send("<h1>Welcome to Generated API 👋 </h1>"))),e.exports=u},773:(e,t,r)=>{const{Controller:o}=r(295),n=r(663);e.exports=new class extends o{constructor(){super(n)}}},909:(e,t,r)=>{const{Controller:o}=r(295),n=r(833);e.exports=new class extends o{constructor(){super(n)}}},731:(e,t,r)=>{const{Controller:o}=r(295),n=r(178);e.exports=new class extends o{constructor(){super(n)}}},505:(e,t,r)=>{const{Controller:o}=r(295),n=r(124);e.exports=new class extends o{constructor(){super(n)}}},663:(e,t,r)=>{const{Model:o,DataTypes:n}=r(121),s=r(577);class a extends o{}a.init({ID:{key:"ID",type:n.INTEGER(10),unique:!1,allowNull:!1,primaryKey:!0,autoIncrement:!1,autoIncrementIdentity:!1},FirstName:{key:"FirstName",type:n.STRING(255),unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1},LastName:{key:"LastName",type:n.STRING(255),unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1},Address:{key:"Address",type:n.STRING(255),unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1},BirthDate:{key:"BirthDate",type:n.DATE,unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1},PhoneNumber:{key:"PhoneNumber",type:n.INTEGER(10),unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1}},{sequelize:s,tableName:"Customer"}),e.exports=a},833:(e,t,r)=>{const{Model:o,DataTypes:n}=r(121),s=r(577);class a extends o{}a.init({MovieID:{key:"MovieID",type:n.INTEGER(10),unique:!1,allowNull:!1,primaryKey:!0,autoIncrement:!1,autoIncrementIdentity:!1,references:{key:"ID",model:"Movie"}},CustomerID:{key:"CustomerID",type:n.INTEGER(10),unique:!1,allowNull:!1,primaryKey:!0,autoIncrement:!1,autoIncrementIdentity:!1,references:{key:"ID",model:"Customer"}},Date_Rented:{key:"Date_Rented",type:n.TIME,unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1},Due_Date:{key:"Due_Date",type:n.TIME,unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1}},{sequelize:s,tableName:"Customer_Movie"}),e.exports=a},178:(e,t,r)=>{const{Model:o,DataTypes:n}=r(121),s=r(577);class a extends o{}a.init({ID:{key:"ID",type:n.INTEGER(10),unique:!1,allowNull:!1,primaryKey:!0,autoIncrement:!1,autoIncrementIdentity:!1},ProducerID:{key:"ProducerID",type:n.INTEGER(10),unique:!1,allowNull:!1,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1,references:{key:"ID",model:"Producer"}},Title:{key:"Title",type:n.STRING(255),unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1},Duration:{key:"Duration",type:n.INTEGER(10),unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1},Rating:{key:"Rating",type:n.CHAR(1),unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1}},{sequelize:s,tableName:"Movie"}),e.exports=a},124:(e,t,r)=>{const{Model:o,DataTypes:n}=r(121),s=r(577);class a extends o{}a.init({ID:{key:"ID",type:n.INTEGER(10),unique:!1,allowNull:!1,primaryKey:!0,autoIncrement:!1,autoIncrementIdentity:!1},CompanyName:{key:"CompanyName",type:n.STRING(200),unique:!1,allowNull:!0,primaryKey:!1,autoIncrement:!1,autoIncrementIdentity:!1},Country:{key:"Country",type:n.STRING(255),unique:!1,allowNull:!0,primaryKey:!1,defaultValue:"Bolivia",autoIncrement:!1,autoIncrementIdentity:!1}},{sequelize:s,tableName:"Producer"}),e.exports=a},295:(e,t,r)=>{const{Model:o}=r(121),{Request:n,Response:s}=r(127),a=r(577),u={status:500,message:"⚠️ Ups!, Something goes Wrong !!⚠️"};e.exports={Controller:class{constructor(e){this.model=e}all=async(e,t)=>{let r=await a.transaction({autocommit:!0});return this.model.findAll().then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await r.rollback(),t.status(500).json(u))))};find=async(e,t)=>{let r=await a.transaction({autocommit:!0});return this.model.findOne({where:{id:e.params.id},transaction:r}).then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await r.rollback(),t.status(500).json(u))))};save=async(e,t)=>{let r=await a.transaction({autocommit:!0});return this.model.upsert(e.body,{transaction:r}).then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await r.rollback(),t.status(500).json(u))))};destroy=async(e,t)=>{let r=await a.transaction({autocommit:!0});return this.model.destroy({transaction:r,where:{id:e.params.id}}).then((e=>t.status(200).json(e))).catch((async e=>(console.error(e),await r.rollback(),t.status(500).json(u))))}},defaultErrorMessage:u}},824:e=>{const t={read:(e,t,r)=>e.get(`/${t}`,r.all),show:(e,t,r)=>e.get(`/${t}/:id`,r.find),create:(e,t,r)=>e.post(`/${t}`,r.save),update:(e,t,r)=>e.post(`/${t}/:id`,r.save),delete:(e,t,r)=>e.delete(`/${t}/:id`,r.destroy)};e.exports={addOperationRoutes:(e,r,{route:o,operations:n})=>{n.forEach((n=>{t[n](e,o,r)}))}}},577:(e,t,r)=>{const{Sequelize:o}=r(121);r(334).config(),e.exports=new o({logging:!1,host:process.env.DB_HOST,port:process.env.DB_PORT,dialect:process.env.DB_DIAL,database:process.env.DB_NAME,username:process.env.DB_USER,password:process.env.DB_PASS,define:{paranoid:!0,defaultScope:{attributes:{exclude:["createdAt","updatedAt","deletedAt"]}}}})},479:e=>{"use strict";e.exports=require("cors")},334:e=>{"use strict";e.exports=require("dotenv")},127:e=>{"use strict";e.exports=require("express")},121:e=>{"use strict";e.exports=require("sequelize")},622:e=>{"use strict";e.exports=JSON.parse('{"route":"customers","operations":["read","show","create","update","delete"]}')},199:e=>{"use strict";e.exports=JSON.parse('{"route":"customer_movies","operations":["read","show","create","update","delete"]}')},513:e=>{"use strict";e.exports=JSON.parse('{"route":"movies","operations":["read","show","create","update","delete"]}')},594:e=>{"use strict";e.exports=JSON.parse('{"route":"producers","operations":["read","show","create","update","delete"]}')}},t={};function r(o){var n=t[o];if(void 0!==n)return n.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,r),s.exports}(()=>{const e=r(672);r(334).config(),e.listen(process.env.PORT||8e3,(()=>{console.log(`Server running on [33mhttp://${process.env.HOST}:${process.env.PORT}[0m`),console.log(new Date)}))})()})();